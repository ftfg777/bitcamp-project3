/*
 * This source file was generated by the Gradle 'init' task
 */
package bitcamp.project3;

import bitcamp.project3.command.*;
import bitcamp.project3.util.Prompt;
import bitcamp.project3.vo.*;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class App {
  String[] menus = new String[] {"손님받기", "재고확인", "상점가기", "메모하기", "일과정산"};
  Map<String, Command> commandMap = new HashMap<>();
  List<BookInfo> bookList = new ArrayList<>();
  List<RentInfo> rentInfos = new ArrayList<>();
  StoreInfo storeInfos = new StoreInfo();
  List<Guest> guests = new ArrayList<>();

  private App() {
    commandMap.put("손님받기", new GuestCommand(bookList, rentInfos, storeInfos));
    commandMap.put("재고확인", new StockCommand(bookList));
    commandMap.put("상점가기", new StoreCommand(bookList, storeInfos));
    commandMap.put("메모하기", new NoteCommand(guests, storeInfos));
    commandMap.put("일과정산", new DayOverCommand(storeInfos));
    setData(bookList, guests);
  }

  public static void main(String[] args) {
    new App().execute();
  }

  private void setData(List<BookInfo> bookList, List<Guest> guests) {
    bookList.add(new BookInfo("귀멸의칼날1", 2, 10));
    bookList.add(new BookInfo("귀멸의칼날2", 3, 10));
    bookList.add(new BookInfo("귀멸의칼날3", 1, 10));
    bookList.add(new BookInfo("귀멸의칼날4", 5, 10));
    bookList.add(new BookInfo("귀멸의칼날5", 6, 10));
    guests.add(new Kid());
    guests.add(new NoJob());
    guests.add(new Grandpa());
    guests.add(new Student());

  }

  public void execute() {
    String command = "";
    while (true) {
      printInfo();
      printMenu();
      try {
        command = Prompt.input("메인>");

      } catch (NumberFormatException ex) {
      }
      if (command.equals("menu")) {
        printMenu();
        continue;
      }
      int menuNo = Integer.parseInt(command);
      String menuTitle = getMenuTitle(menuNo);
      processMenu(menuTitle);
    }
  }

  public void printInfo() {
    System.out.println("[만화책방으로 건물주되기]");
    System.out.println("-------------------------");
    System.out.println("만화책방 현황");
    System.out.printf("날  짜 : %s\n", storeInfos.getDate());
    System.out.printf("자  금 : %s 원\n", storeInfos.getAccount());
    System.out.printf("명  성 : %s 점\n", storeInfos.getReputation());
    System.out.printf("피로도 : %s 점\n", storeInfos.getTiredness());
  }

  public void printMenu() {
    System.out.println("-------------------------");
    System.out.println("메뉴");
    for (int i = 0; i < menus.length; i++) {
      System.out.printf("%d. %s\n", (i + 1), menus[i]);
    }
    System.out.println("-------------------------");
  }

  private void processMenu(String menuTitle) {
    Command command = commandMap.get(menuTitle);
    if (command == null) {
      System.out.printf("%s 메뉴의 명령을 처리할 수 없습니다.\n", menuTitle);
      return;
    }
    command.execute();
  }

  private boolean isValidateMenu(int menuNo) {
    return menuNo >= 1 && menuNo <= menus.length;
  }

  private String getMenuTitle(int menuNo) {
    return isValidateMenu(menuNo) ? menus[menuNo - 1] : null;
  }
}
